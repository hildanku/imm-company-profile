/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CareerIndexRouteImport } from './routes/career/index'
import { Route as CareerIdRouteImport } from './routes/career/$id'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as CareerApplyIdRouteImport } from './routes/career/apply/$id'
import { Route as ProtectedManagementUserRouteImport } from './routes/_protected/management/user'
import { Route as ProtectedManagementCareerApplicationRouteImport } from './routes/_protected/management/career-application'
import { Route as ProtectedManagementCareerRouteImport } from './routes/_protected/management/career'
import { Route as ProtectedManagementBlogRouteImport } from './routes/_protected/management/blog'

const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CareerIndexRoute = CareerIndexRouteImport.update({
  id: '/career/',
  path: '/career/',
  getParentRoute: () => rootRouteImport,
} as any)
const CareerIdRoute = CareerIdRouteImport.update({
  id: '/career/$id',
  path: '/career/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const CareerApplyIdRoute = CareerApplyIdRouteImport.update({
  id: '/career/apply/$id',
  path: '/career/apply/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedManagementUserRoute = ProtectedManagementUserRouteImport.update({
  id: '/management/user',
  path: '/management/user',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedManagementCareerApplicationRoute =
  ProtectedManagementCareerApplicationRouteImport.update({
    id: '/management/career-application',
    path: '/management/career-application',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedManagementCareerRoute =
  ProtectedManagementCareerRouteImport.update({
    id: '/management/career',
    path: '/management/career',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedManagementBlogRoute = ProtectedManagementBlogRouteImport.update({
  id: '/management/blog',
  path: '/management/blog',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/contact': typeof ContactRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/career/$id': typeof CareerIdRoute
  '/career': typeof CareerIndexRoute
  '/management/blog': typeof ProtectedManagementBlogRoute
  '/management/career': typeof ProtectedManagementCareerRoute
  '/management/career-application': typeof ProtectedManagementCareerApplicationRoute
  '/management/user': typeof ProtectedManagementUserRoute
  '/career/apply/$id': typeof CareerApplyIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/contact': typeof ContactRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/career/$id': typeof CareerIdRoute
  '/career': typeof CareerIndexRoute
  '/management/blog': typeof ProtectedManagementBlogRoute
  '/management/career': typeof ProtectedManagementCareerRoute
  '/management/career-application': typeof ProtectedManagementCareerApplicationRoute
  '/management/user': typeof ProtectedManagementUserRoute
  '/career/apply/$id': typeof CareerApplyIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/about': typeof AboutRoute
  '/blog': typeof BlogRoute
  '/contact': typeof ContactRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/career/$id': typeof CareerIdRoute
  '/career/': typeof CareerIndexRoute
  '/_protected/management/blog': typeof ProtectedManagementBlogRoute
  '/_protected/management/career': typeof ProtectedManagementCareerRoute
  '/_protected/management/career-application': typeof ProtectedManagementCareerApplicationRoute
  '/_protected/management/user': typeof ProtectedManagementUserRoute
  '/career/apply/$id': typeof CareerApplyIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/blog'
    | '/contact'
    | '/login'
    | '/register'
    | '/career/$id'
    | '/career'
    | '/management/blog'
    | '/management/career'
    | '/management/career-application'
    | '/management/user'
    | '/career/apply/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/blog'
    | '/contact'
    | '/login'
    | '/register'
    | '/career/$id'
    | '/career'
    | '/management/blog'
    | '/management/career'
    | '/management/career-application'
    | '/management/user'
    | '/career/apply/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_protected'
    | '/about'
    | '/blog'
    | '/contact'
    | '/_auth/login'
    | '/_auth/register'
    | '/career/$id'
    | '/career/'
    | '/_protected/management/blog'
    | '/_protected/management/career'
    | '/_protected/management/career-application'
    | '/_protected/management/user'
    | '/career/apply/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRoute
  ContactRoute: typeof ContactRoute
  CareerIdRoute: typeof CareerIdRoute
  CareerIndexRoute: typeof CareerIndexRoute
  CareerApplyIdRoute: typeof CareerApplyIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/career/': {
      id: '/career/'
      path: '/career'
      fullPath: '/career'
      preLoaderRoute: typeof CareerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/career/$id': {
      id: '/career/$id'
      path: '/career/$id'
      fullPath: '/career/$id'
      preLoaderRoute: typeof CareerIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/career/apply/$id': {
      id: '/career/apply/$id'
      path: '/career/apply/$id'
      fullPath: '/career/apply/$id'
      preLoaderRoute: typeof CareerApplyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/management/user': {
      id: '/_protected/management/user'
      path: '/management/user'
      fullPath: '/management/user'
      preLoaderRoute: typeof ProtectedManagementUserRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/management/career-application': {
      id: '/_protected/management/career-application'
      path: '/management/career-application'
      fullPath: '/management/career-application'
      preLoaderRoute: typeof ProtectedManagementCareerApplicationRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/management/career': {
      id: '/_protected/management/career'
      path: '/management/career'
      fullPath: '/management/career'
      preLoaderRoute: typeof ProtectedManagementCareerRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/management/blog': {
      id: '/_protected/management/blog'
      path: '/management/blog'
      fullPath: '/management/blog'
      preLoaderRoute: typeof ProtectedManagementBlogRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedRouteChildren {
  ProtectedManagementBlogRoute: typeof ProtectedManagementBlogRoute
  ProtectedManagementCareerRoute: typeof ProtectedManagementCareerRoute
  ProtectedManagementCareerApplicationRoute: typeof ProtectedManagementCareerApplicationRoute
  ProtectedManagementUserRoute: typeof ProtectedManagementUserRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedManagementBlogRoute: ProtectedManagementBlogRoute,
  ProtectedManagementCareerRoute: ProtectedManagementCareerRoute,
  ProtectedManagementCareerApplicationRoute:
    ProtectedManagementCareerApplicationRoute,
  ProtectedManagementUserRoute: ProtectedManagementUserRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRoute,
  ContactRoute: ContactRoute,
  CareerIdRoute: CareerIdRoute,
  CareerIndexRoute: CareerIndexRoute,
  CareerApplyIdRoute: CareerApplyIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
